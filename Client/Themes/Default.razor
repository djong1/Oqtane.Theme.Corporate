@using System.Net
@namespace Oqtane.Theme.Arsha
@inherits ThemeBase
@inject NavigationManager NavigationManager
@inject ISettingService SettingService
@inject IStringLocalizer<Default> Localizer

<!-- ======= Header ======= -->
<header id="header" class="@_headerclass">
    <div class="container d-flex align-items-center">
        <a id="top"></a>
        @if (PageState.Site.LogoFileId != null)
        {
            <a href="@PageState.Alias.Path" class="logo me-auto">
                <img class="img-fluid" src="@Utilities.FileUrl(PageState.Alias, PageState.Site.LogoFileId.Value)" alt="@PageState.Site.Name" />
            </a>
        }
        else
        {
            <h1 class="logo me-auto"><a href="/">@PageState.Site.Name</a></h1>
        }
        <nav id="navbar" class="navbar">
            <NavMenu />
        </nav>
        <div class="mx-3 controls-group">
            <UserProfile /> <Login /> <ControlPanel />
            @if (UserSecurity.IsAuthorized(PageState.User, PermissionNames.Edit, PageState.Page.PermissionList))
            {
                <a href="@_themesettingsurl" class="btn btn-outline-secondary">
                    <span class="oi oi-brush"></span>
                </a>
            }
        </div>
    </div>
</header>
<!-- End Header -->

@if (!string.IsNullOrEmpty(_hero))
{
    <!-- ======= Hero Section ======= -->
    @((MarkupString)_hero)
    <!-- End Hero -->
    <!-- ======= Main ======= -->
    <main id="main">
        <Pane Name="@PaneNames.Default" />
    </main>
    <!-- End #main -->
}
else
{
    <!-- ======= Main ======= -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <h2 class="mt-2">@PageState.Page.Name</h2>
            </div>
        </section>
        <!-- End Breadcrumbs -->
        <section class="inner-page">
            <div class="container">
                <Pane Name="@PaneNames.Default" />
            </div>
        </section>
    </main>
    <!-- End Main -->
}

<!-- ======= Footer ======= -->
@((MarkupString)_footer)
<!-- End Footer -->

<a href="@NavigateUrl()" class="back-to-top d-flex align-items-center justify-content-center" data-enhance-nav="false"><i class="bi bi-arrow-up-short"></i></a>

@code {
    public override string Name => "Default";
    public override string Panes => PaneNames.Default;

    private string _hero = "";
    private string _headerclass = "";
    private string _footer = "";
    private string _themesettingsurl = "";

    protected override void OnParametersSet()
    {
        try
        {
            _hero = SettingService.GetSetting(PageState.Page.Settings, GetType().Namespace + ":Hero", "");
            _headerclass = "fixed-top header-inner-pages";
            if (!string.IsNullOrEmpty(_hero))
            {
                _hero = Utilities.FormatContent(_hero, PageState.Alias, "render");
                _headerclass = "fixed-top";
            }

            _footer = SettingService.GetSetting(PageState.Site.Settings, GetType().Namespace + ":Footer", "");
            _footer = Utilities.FormatContent(_footer, PageState.Alias, "render");

            var moduleId = int.Parse(PageState.Site.Settings[Constants.PageManagementModule]);
            _themesettingsurl = Utilities.EditUrl(PageState.Alias.Path, "admin/pages", moduleId, "edit", $"id={PageState.Page.PageId}&tab=ThemeSettings&returnurl={WebUtility.UrlEncode(PageState.Route.PathAndQuery)}");
        }
        catch
        {
            // not implemented
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        var interop = new Interop(JSRuntime);
        await interop.Load();
    }
}
